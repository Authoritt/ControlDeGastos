// <auto-generated />
using System;
using ControlDeGastos.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ControlDeGastos.Migrations
{
    [DbContext(typeof(ControlDeGastosContext))]
    [Migration("20250602173556_Inicial1111")]
    partial class Inicial1111
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ControlDeGastos.Models.DepositoModel", b =>
                {
                    b.Property<int>("rowid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("f006_rowid");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("rowid"));

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2")
                        .HasColumnName("f006_fecha");

                    b.Property<int>("fondo_monetario_id")
                        .HasColumnType("int")
                        .HasColumnName("f006_fondo_monetario_id");

                    b.Property<decimal>("monto")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("f006_monto");

                    b.HasKey("rowid");

                    b.HasIndex("fondo_monetario_id");

                    b.ToTable("t006_deposito");
                });

            modelBuilder.Entity("ControlDeGastos.Models.FondoMonetarioModel", b =>
                {
                    b.Property<int>("rowid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("f002_rowid");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("rowid"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("f002_nombre");

                    b.Property<string>("tipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("f002_tipo");

                    b.HasKey("rowid");

                    b.ToTable("t002_fondo_monetario");
                });

            modelBuilder.Entity("ControlDeGastos.Models.GastoDetalleModel", b =>
                {
                    b.Property<int>("rowid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("f005_rowid");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("rowid"));

                    b.Property<int>("encabezado_id")
                        .HasColumnType("int")
                        .HasColumnName("f005_encabezado_id");

                    b.Property<decimal>("monto")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("f005_monto");

                    b.Property<int>("tipo_gasto_id")
                        .HasColumnType("int")
                        .HasColumnName("f005_tipo_gasto_id");

                    b.HasKey("rowid");

                    b.HasIndex("encabezado_id");

                    b.HasIndex("tipo_gasto_id");

                    b.ToTable("t005_gasto_detalle");
                });

            modelBuilder.Entity("ControlDeGastos.Models.GastoEncabezadoModel", b =>
                {
                    b.Property<int>("rowid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("f004_rowid");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("rowid"));

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2")
                        .HasColumnName("f004_fecha");

                    b.Property<int>("fondo_monetario_id")
                        .HasColumnType("int")
                        .HasColumnName("f004_fondo_monetario_id");

                    b.Property<string>("nombre_comercio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("f004_nombre_comercio");

                    b.Property<string>("observaciones")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("f004_observaciones");

                    b.Property<string>("tipo_documento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("f004_tipo_documento");

                    b.HasKey("rowid");

                    b.HasIndex("fondo_monetario_id");

                    b.ToTable("t004_gasto_encabezado");
                });

            modelBuilder.Entity("ControlDeGastos.Models.PresupuestoModel", b =>
                {
                    b.Property<int>("rowid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("f003_rowid");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("rowid"));

                    b.Property<int>("anio")
                        .HasColumnType("int")
                        .HasColumnName("f003_anio");

                    b.Property<int>("mes")
                        .HasColumnType("int")
                        .HasColumnName("f003_mes");

                    b.Property<decimal>("monto")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("f003_monto");

                    b.Property<int>("tipo_gasto_id")
                        .HasColumnType("int")
                        .HasColumnName("f003_tipo_gasto_id");

                    b.Property<string>("usuario_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("f003_usuario_id");

                    b.HasKey("rowid");

                    b.HasIndex("tipo_gasto_id");

                    b.HasIndex("usuario_id");

                    b.ToTable("t003_presupuesto");
                });

            modelBuilder.Entity("ControlDeGastosControlDeGastos.Models.TipoGastoModel", b =>
                {
                    b.Property<int>("rowid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("f001_rowid");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("rowid"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("f001_Descripcion");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)")
                        .HasColumnName("f001_nombre");

                    b.HasKey("rowid");

                    b.HasIndex("nombre")
                        .IsUnique();

                    b.ToTable("t001_tipo_gasto");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ControlDeGastos.Models.DepositoModel", b =>
                {
                    b.HasOne("ControlDeGastos.Models.FondoMonetarioModel", "FondoMonetario")
                        .WithMany("Depositos")
                        .HasForeignKey("fondo_monetario_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FondoMonetario");
                });

            modelBuilder.Entity("ControlDeGastos.Models.GastoDetalleModel", b =>
                {
                    b.HasOne("ControlDeGastos.Models.GastoEncabezadoModel", "Encabezado")
                        .WithMany("Detalles")
                        .HasForeignKey("encabezado_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControlDeGastosControlDeGastos.Models.TipoGastoModel", "TipoGasto")
                        .WithMany("GastosDetalle")
                        .HasForeignKey("tipo_gasto_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Encabezado");

                    b.Navigation("TipoGasto");
                });

            modelBuilder.Entity("ControlDeGastos.Models.GastoEncabezadoModel", b =>
                {
                    b.HasOne("ControlDeGastos.Models.FondoMonetarioModel", "FondoMonetario")
                        .WithMany("Gastos")
                        .HasForeignKey("fondo_monetario_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FondoMonetario");
                });

            modelBuilder.Entity("ControlDeGastos.Models.PresupuestoModel", b =>
                {
                    b.HasOne("ControlDeGastosControlDeGastos.Models.TipoGastoModel", "TipoGasto")
                        .WithMany("Presupuestos")
                        .HasForeignKey("tipo_gasto_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "Usuario")
                        .WithMany()
                        .HasForeignKey("usuario_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoGasto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ControlDeGastos.Models.FondoMonetarioModel", b =>
                {
                    b.Navigation("Depositos");

                    b.Navigation("Gastos");
                });

            modelBuilder.Entity("ControlDeGastos.Models.GastoEncabezadoModel", b =>
                {
                    b.Navigation("Detalles");
                });

            modelBuilder.Entity("ControlDeGastosControlDeGastos.Models.TipoGastoModel", b =>
                {
                    b.Navigation("GastosDetalle");

                    b.Navigation("Presupuestos");
                });
#pragma warning restore 612, 618
        }
    }
}
